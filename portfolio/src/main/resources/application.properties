spring.profiles.active=dev

connection.timeout = 2000
logging.level.root = INFO
security.enabled = false
server.port = 8080
spring.application.name = portfolio-codegroup-challenge
spring.kafka.bootstrap-servers = ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
spring.kafka.consumer.group-id = portfolio-group-01
spring.kafka.consumer.max-poll-interval-ms = 2147483647
spring.kafka.consumer.session-time-out = 30000
spring.kafka.max-poll-records = 3
spring.kafka.retries = 1
spring.kafka.topic = portfolio-topic-teste
spring.output.ansi.enabled = detect
spring.kafka.jaas.enabled = false
spring.kafka.consumer.ackOnError = ${KAFKA_CONSUMER_ACKONERROR:true}
spring.kafka.consumer.retryBackOff =  ${KAFKA_CONSUMER_RETRYBACKOFF:2000}   
spring.kafka.consumer.reconnectBackOffMax = ${KAFKA_CONSUMER_RECONNECTBACKOFFMAX:4000}   
spring.kafka.consumer.receiveBufferSize = ${KAFKA_CONSUMER_RECEIVE_BUFFER_SIZE:102400}
kafka.consumer.receiveBufferSize = ${KAFKA_CONSUMER_RECEIVE_BUFFER_SIZE:102400}
kafka.consumer.group-id = ${spring.kafka.consumer.group-id}